process Test = {
    
    untracked PSet maxEvents = {untracked int32 input = 1}
    
    source = EmptySource {
	untracked uint32 firstRun = 1   
	untracked uint32 numberEventsInRun = 1
    }
    
    service = MessageLogger {
	untracked vstring destinations = { "testConditionAccess.log" }
	untracked PSet testConditionAccess.log = { untracked string threshold = "INFO" }
    }
    
    service = Timing {}
    
    
    #include "CalibTracker/Configuration/data/SiStrip_FakeConditions.cff"
    include "CalibTracker/Configuration/data/SiStrip_FrontierConditions_DevDB.cff"
    #include "CalibTracker/Configuration/data/SiStrip_FrontierConditions_IntDB.cff"

    module badstrip  =  SiStripBadStripReader  {untracked uint32   printDebug = 2}
   #module modulehv  =  SiStripModuleHVReader  {untracked uint32   printDebug = 2}
    module gain      =  SiStripApvGainReader   {untracked uint32   printDebug = 2}
    module ped       =  SiStripPedestalsReader {untracked uint32   printDebug = 2}
    module noise     =  SiStripNoisesReader    {untracked uint32   printDebug = 2}


    service = SimpleMemoryCheck {
	untracked int32 ignoreTotal = 0 # default is one
    }

    include "PerfTools/Callgrind/data/callgrindSwitch.cfi"
    
    untracked PSet options   = { untracked bool wantSummary = true }
    
    path p = {
	profilerStart,
	badstrip, 	
	#modulehv,,
	gain,     
	ped,      
	noise,    
	profilerStop
    }
    
    module print = AsciiOutputModule {}
    endpath ep = { print }
}
