process Test = {
    
    untracked PSet maxEvents = {untracked int32 input = 1}
    
    source = EmptySource {
	untracked uint32 firstRun = 7000   
	untracked uint32 numberEventsInRun = 7000
    }
    
    service = MessageLogger {
	untracked vstring destinations = { "testConditionAccess.log" }
	untracked PSet testConditionAccess.log = { untracked string threshold = "INFO" }
    	untracked vstring debugModules   = { "*" }
    }
    
    service = Timing {}
    
        
    ##############################
    # Strip 
    ##############################
    
    #
    ##Cabling
    #
    
    es_source siStripFedCabling = poolDBESSource from "CalibTracker/Configuration/data/Common/PoolDBESSource.cfi"
    replace siStripFedCabling.connect="sqlite_file:/tmp/giordano/dbfile.db"
    replace siStripFedCabling.toGet = {{ string record = "SiStripFedCablingRcd"
	    string tag = "SiStripFedCabling_21X" }}
    replace siStripFedCabling.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
    es_module sistripconn = SiStripConnectivity {}
    
    
    #
    #
    ##Gain
    #
    es_source siStripApvGain = poolDBESSource from "CalibTracker/Configuration/data/Common/PoolDBESSource.cfi"
    replace siStripApvGain.connect="sqlite_file:/tmp/giordano/dbfile.db"
    replace siStripApvGain.toGet = {{ string record = "SiStripApvGainRcd"
	    string tag = "SiStripGain_Ideal_21X" }}
    replace siStripApvGain.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
    
    include "CalibTracker/SiStripESProducers/data/SiStripGainESProducer.cfi"
    
    #
    ##LA
    #
    es_source siStripLorentzAngle = poolDBESSource from "CalibTracker/Configuration/data/Common/PoolDBESSource.cfi"
    replace siStripLorentzAngle.connect="sqlite_file:/tmp/giordano/dbfile.db"
    replace siStripLorentzAngle.toGet = {{ string record = "SiStripLorentzAngleRcd"
	    string tag = "SiStripLorentzAngle_Ideal_21X" }}
    replace siStripLorentzAngle.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
    # alternative
    #include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPE.cfi"
    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"



    
    #
    ##Noise
    #
    es_source siStripNoise = poolDBESSource from "CalibTracker/Configuration/data/Common/PoolDBESSource.cfi"
    replace siStripNoise.connect="sqlite_file:/tmp/giordano/dbfile.db"
    replace siStripNoise.toGet = {{ string record = "SiStripNoisesRcd"
	    string tag = "SiStripNoise_Fake_PeakMode_21X" }}
    replace siStripNoise.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
    
    #
    ##Pedestals
    #
    #es_source siStripPedestals = poolDBESSource from "CalibTracker/Configuration/data/Common/PoolDBESSource.cfi"
    #replace siStripPedestals.connect="sqlite_file:/tmp/giordano/dbfile.db"
    #replace siStripPedestals.toGet = {{ string record = "SiStripPedestalsRcd"
#	    string tag = "SiStripPedestals_21X" }}
#    replace siStripPedestals.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"


    #
    #
    ##Threshold
    #
    es_source siStripThreshold = poolDBESSource from "CalibTracker/Configuration/data/Common/PoolDBESSource.cfi"
    replace siStripThreshold.connect="sqlite_file:/tmp/giordano/dbfile.db"
    replace siStripThreshold.toGet = {{ string record = "SiStripThresholdRcd"
	    string tag = "SiStripThreshold_Fake_21X" }}
    replace siStripThreshold.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
    
    include "CalibTracker/SiStripESProducers/data/SiStripGainESProducer.cfi"
    
   # module badstrip  =  SiStripBadStripReader  {untracked uint32   printDebug = 2}
   #module modulehv  =  SiStripModuleHVReader  {untracked uint32   printDebug = 2}
    module gain      =  SiStripApvGainReader   {untracked uint32   printDebug = 2}
 #   module ped       =  SiStripPedestalsReader {untracked uint32   printDebug = 4}
    module noise     =  SiStripNoisesReader    {untracked uint32   printDebug = 4}
    module threshold  =  SiStripThresholdReader    {untracked uint32   printDebug = 4}
    module cabling   = test_AnalyzeCabling { }


    service = SimpleMemoryCheck {
	untracked int32 ignoreTotal = 0 # default is one
    }

    include "PerfTools/Callgrind/data/callgrindSwitch.cfi"
    
    untracked PSet options   = { untracked bool wantSummary = true }
    
    path p = {
	profilerStart,
	cabling,
	#badstrip, 	
	#modulehv,,
	gain,     
	#ped,      
	noise,
	threshold,
	profilerStop
    }
    
    module print = AsciiOutputModule {}
    endpath ep = { print }
}
